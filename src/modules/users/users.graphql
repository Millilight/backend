input AskResetPasswordUserInput {
  email: String!
}

type AskResetPasswordUserResponse {
  success: Boolean!
}

input CreateUserInput {
  email: String!
  firstname: String!
  lastname: String!
  password: String!
}

type LoginResponse {
  access_token: String!
  user: User!
}

input LoginUserInput {
  email: String!
  password: String!
}

type Mutation {
  askResetPasswordUser(
    ask_reset_password_user_dto: AskResetPasswordUserInput!
  ): AskResetPasswordUserResponse!
  createUser(create_user_dto: CreateUserInput!): User!
  login(login_user_dto: LoginUserInput!): LoginResponse!
  resetPasswordUser(reset_password_user_dto: ResetPasswordUserInput!): User!
  updateEmailUser(update_email_user_dto: UpdateEmailUserInput!): User!
  updateUser(update_user_dto: UpdateUserInput!): User!
  updateWishes(update_wishes_dto: UpdateWishesInput!): Wishes!
  verifyEmail(verify_email_dto: VerifyEmailInput!): VerifyEmailResponse!
}

type Query {
  user: User!
}

input ResetPasswordUserInput {
  new_password: String!
  token: String!
  user_id: String!
}

input UpdateEmailUserInput {
  token: String!
  user_id: String!
}

input UpdateUserInput {
  firstname: String
  lastname: String
  new_email: String
  password: String
}

input UpdateWishesInput {
  burial_cremation: String
  burial_cremation_place: String
  music: String
  religion: String
  place: String
  prevoyance: String
  list_of_people: String
  coffin: String
  ornament: String
  text: String
  other: String
}

type UrgentData {
  user_id: String!
}

type User {
  _id: ID!
  email: String!
  firstname: String!
  lastname: String!
  urgent_data: UrgentData!
}

input VerifyEmailInput {
  token: String!
  user_id: String!
}

type VerifyEmailResponse {
  success: Boolean!
}

type Wishes {
  burial_cremation: String
  burial_cremation_place: String
  music: String
  religion: String
  place: String
  prevoyance: String
  list_of_people: String
  coffin: String
  ornament: String
  text: String
  other: String
}
