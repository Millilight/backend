enum StateTrust {
  INVITATION_SENT
  VALIDATED
}

type Heir {
  _id: ID!
  user_details: UserDetails!
  security_code: String
  added_date: Date!
  urgent_data_unlocked: Boolean!
  urgent_data_unlocked_date: Date
  sensitive_data_unlocked: Boolean!
  sensitive_data_unlocked_date: Date
  state: StateTrust!
}

type Legator {
  _id: ID!
  user_details: UserDetails!
  added_date: Date!
  state: StateTrust!
  urgent_data_unlocked: Boolean!
  urgent_data_unlocked_date: Date
  urgent_data: UrgentData
  sensitive_data_unlocked: Boolean!
  sensitive_data_unlocked_date: Date
  sensitive_data: SensitiveData
}

type UserDetails {
  email: String!
  firstname: String!
  lastname: String!
}

extend type User {
  heirs: [Heir!]!
  legators: [Legator!]!
}

input AddHeirInput {
  firstname: String!
  lastname: String!
  email: String!
}

type AddHeirResponse {
  heir_user: Heir!
}

input ConfirmSecurityCodeInput {
  legator_user_id: ID!
  security_code: String!
}

type ConfirmSecurityCodeResponse {
  legator_user: Legator!
}

input UnlockUrgentDataInput {
  legator_user_id: ID!
}

type UnlockUrgentDataResponse {
  success: Boolean!
}

input VerifyEmailWithInvitationInput {
  user_id: ID!
  token: String!
  password: String!
}

type VerifyEmailWithInvitationResponse {
  success: Boolean!
}

type Mutation {
  addHeir(add_heir_user_input: AddHeirInput!): AddHeirResponse!
  verifyEmailWithInvitation(
    verify_email_with_invitation_input: VerifyEmailWithInvitationInput!
  ): VerifyEmailWithInvitationResponse!
  confirmSecurityCode(
    confirm_security_code_input: ConfirmSecurityCodeInput!
  ): ConfirmSecurityCodeResponse!
  unlockUrgentData(
    unlock_urgent_data_input: UnlockUrgentDataInput!
  ): UnlockUrgentDataResponse!
}
